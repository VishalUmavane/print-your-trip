# serverless.yml
org: classyendeavors
app: print-your-trip
service: print-your-trip-api-service
useDotenv: true

plugins:
  - serverless-offline

custom:
  stage: ${opt:stage, 'local'}
  region: ${opt:region, self:provider.region}
  env: ${opt:env, self:custom.stage}
  serverless-offline:
    httpPort: 5200

resources:
  Resources: ${file(src/config/resources.yml)}

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION}
  stage: ${self:custom.stage}
  timeout: 29
  
  # Fixed API Gateway configuration
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'
      - 'image/jpeg'
      - 'image/jpg'
      - 'image/png'
      - 'image/gif'
      - 'image/webp'
      - 'application/pdf'
      - 'application/octet-stream'
  
  # IAM and environment
  iam:
    role:
      statements: ${file(src/config/permissions.yml)}
  environment:
    STAGE: ${env:STAGE}
    IMAGE_S3_BUCKET: ${env:IMAGE_S3_BUCKET}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

  # Stack tags for better resource management
  stackTags:
    Environment: ${self:custom.stage}
    Service: ${self:service}
    Owner: classyendeavors

functions:
  uploadImage:
    handler: src/handlers/image.upload
    description: "Upload images to S3 bucket"
    memorySize: 512
    events:
      - http:
          path: /upload
          method: post
          cors:
            origin: "*"
            allowCredentials: true
    timeout: 29
    environment:
      MAX_FILE_SIZE: 10485760

  convertToPDF:
    handler: src/handlers/image.convert
    description: "Convert images to PDF"
    memorySize: 1024
    events:
      - http:
          path: /convert
          method: post
          cors:
            origin: "*"
            allowCredentials: true
    timeout: 29
    environment:
      MAX_FILE_SIZE: 10485760